name: Security Scanning

on:
  schedule:
    - cron: '0 0 * * *' # Daily at midnight UTC
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  dependency-audit:
    name: Dependency Audit
    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: [backend, frontend]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Run npm audit (${{ matrix.directory }})
        working-directory: ./${{ matrix.directory }}
        run: |
          npm audit --audit-level=moderate || true
          npm audit --production --audit-level=high

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']

    steps:
      - uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog Secret Scan
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  docker-scan:
    name: Docker Image Vulnerability Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    strategy:
      matrix:
        service: [backend, frontend]

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t ${{ matrix.service }}:scan ./${{ matrix.service }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.service }}:scan
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: [backend, frontend]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.directory }}/package-lock.json

      - name: Install dependencies
        working-directory: ./${{ matrix.directory }}
        run: npm ci

      - name: Check licenses
        working-directory: ./${{ matrix.directory }}
        run: |
          npx license-checker --summary --production || true
          npx license-checker --failOn "GPL;AGPL;LGPL" --production
