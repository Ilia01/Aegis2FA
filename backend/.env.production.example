# ============================================
# 2FA Service - Production Environment (FREE TIER)
# ============================================
# This configuration enables TOTP 2FA with zero external costs.
# TOTP (Google Authenticator/Authy) requires NO external services!

# ============================================
# REQUIRED: Application Settings
# ============================================
NODE_ENV=production
PORT=3001

# Frontend URL for CORS
FRONTEND_URL=https://your-frontend-domain.com

# ============================================
# REQUIRED: Database (PostgreSQL)
# ============================================
# Free options: Railway, Supabase, Neon, ElephantSQL
# Or self-hosted with Docker (included in docker-compose.yml)
DATABASE_URL="postgresql://postgres:postgres@postgres:5432/twofa_db?schema=public&connection_limit=20&pool_timeout=10"

# ============================================
# REQUIRED: Redis Cache
# ============================================
# Free options: Upstash, Redis Cloud (30MB free)
# Or self-hosted with Docker (included in docker-compose.yml)
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
# REDIS_TLS_ENABLED=true  # Uncomment if using cloud Redis with TLS

# ============================================
# REQUIRED: JWT Secrets (Generate Strong Random Values!)
# ============================================
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_ACCESS_SECRET=REPLACE_WITH_64_CHAR_RANDOM_STRING
JWT_REFRESH_SECRET=REPLACE_WITH_64_CHAR_RANDOM_STRING
TEMP_TOKEN_SECRET=REPLACE_WITH_64_CHAR_RANDOM_STRING
DEVICE_TOKEN_SECRET=REPLACE_WITH_64_CHAR_RANDOM_STRING

# Token expiry (recommended production values)
JWT_ACCESS_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d
TEMP_TOKEN_EXPIRES_IN=5m
DEVICE_TOKEN_EXPIRES_IN=30d

# ============================================
# FREE TIER: TOTP 2FA (Google Authenticator)
# ============================================
# ✅ TOTP requires NO configuration - works out of the box!
# ✅ Users scan QR code with Google Authenticator/Authy
# ✅ Completely offline, no external API calls
# ✅ 100% FREE - no external service needed

# ============================================
# OPTIONAL FREE TIER: Email OTP via Gmail
# ============================================
# Gmail free tier: 500 emails/day
# Setup: https://support.google.com/accounts/answer/185833
# Use App Password (not your regular Gmail password)

# Uncomment to enable email OTP:
# EMAIL_SERVICE=gmail
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_SECURE=false
# EMAIL_USER=your-email@gmail.com
# EMAIL_PASSWORD=your-gmail-app-password
# EMAIL_FROM=noreply@yourdomain.com

# ============================================
# PAID TIER: SMS via Twilio (DISABLED for free deployment)
# ============================================
# ❌ SMS requires Twilio account ($$$)
# Leave these commented out for zero-budget deployment

# TWILIO_ACCOUNT_SID=
# TWILIO_AUTH_TOKEN=
# TWILIO_PHONE_NUMBER=
# TWILIO_VERIFY_SERVICE_SID=

# ============================================
# Security & Performance
# ============================================
# Rate limiting (requests per window)
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes
RATE_LIMIT_MAX_REQUESTS=100

# Login rate limiting
LOGIN_RATE_LIMIT_MAX=5
LOGIN_RATE_LIMIT_WINDOW_MS=900000  # 15 minutes

# OTP settings
OTP_EXPIRY_MINUTES=5
OTP_RATE_LIMIT_MAX=3  # Max OTP sends per hour

# Argon2 password hashing (high security)
ARGON2_MEMORY_COST=65536  # 64MB
ARGON2_TIME_COST=3
ARGON2_PARALLELISM=4

# Worker pool (CPU-intensive operations)
WORKER_MIN_THREADS=4
WORKER_MAX_THREADS=8

# ============================================
# Monitoring & Logging
# ============================================
LOG_LEVEL=info
ENABLE_METRICS=true

# Health check endpoint
HEALTH_CHECK_ENABLED=true

# ============================================
# CORS & Security Headers
# ============================================
# Comma-separated list of allowed origins
CORS_ORIGINS=https://your-frontend-domain.com,https://www.your-frontend-domain.com

# Helmet security headers (enabled by default)
HELMET_ENABLED=true

# ============================================
# Quick Setup Commands
# ============================================
# 1. Generate JWT secrets:
#    node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
#    (Run 4 times, one for each secret)
#
# 2. Copy this file:
#    cp .env.production.example .env
#
# 3. Replace all "REPLACE_WITH_" values with generated secrets
#
# 4. Update FRONTEND_URL with your domain
#
# 5. Deploy with Docker:
#    docker-compose up -d
#
# 6. Run database migrations:
#    docker-compose exec backend npm run prisma:migrate
#
# 7. Verify deployment:
#    curl http://localhost:3001/api/health

# ============================================
# What's Included in Free Tier
# ============================================
# ✅ User registration & authentication
# ✅ TOTP 2FA (Google Authenticator/Authy)
# ✅ Backup codes (10 one-time recovery codes)
# ✅ Trusted devices (skip 2FA for 30 days)
# ✅ Session management
# ✅ Audit logging
# ✅ API key management
# ✅ Webhook support
# ✅ Rate limiting & security
#
# Optional (Free with Gmail):
# ✅ Email OTP (500 emails/day via Gmail)
#
# Not Included (Paid Service Required):
# ❌ SMS OTP (requires Twilio account)
